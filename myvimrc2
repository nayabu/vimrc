set tabstop=4 "画面上でタブ文字が占める幅
set shiftwidth=4 "自動インデントでずれる幅
set softtabstop=4 "連続した空白に対してタブキーやバックスペースキーでカーソルが動く幅
set autoindent "改行時に前の行のインデントを継続する
set smartindent "改行時に入力された行の末尾に合わせて次の行のインデントを増減する
set number "行番号表示

" encoding
set encoding=utf-8
set fileencodings=iso-2022-jp,euc-jp,sjis,utf-8
set fileformats=unix,dos,mac

set binary noeol

set hlsearch

set expandtab "tab=space on"

" systems
set nocompatible
set noswapfile
set nobackup
set writebackup
set clipboard=unnamed,autoselect

" syntax
syntax enable
set background=dark
"colorscheme molokaia
"set t_Co=256
"let g:molokai_original=1

" start neobundle setting
set nocompatible
if has('vim_starting')
    if !isdirectory(expand("~/.vim/bundle/neobundle.vim/"))
        echo "install neobundle..."
        :call system("git clone git://github.com/Shougo/neobundle.vim
~/.vim/bundle/neobundle.vim")
    endif
    set runtimepath+=~/.vim/bundle/neobundle.vim
endif
call neobundle#begin(expand('~/.vim/bundle/'))

" neobundle plugin
NeoBundleFetch 'Shougo/neobundle.vim'
"insert here your Neobundle plugins"
NeoBundle 'scrooloose/nerdtree'
NeoBundle 'stephpy/vim-php-cs-fixer'
" vim go cloneでinstallしたので不要
"NeoBundle 'fatih/vim-go'
let g:go_null_module_warning = 0
let g:NERDTreeDirArrowExpandable = '+'
let g:NERDTreeDirArrowCollapsible = '-'

call neobundle#end()

filetype plugin indent on
" end neobundle setting

" nerdtree
nnoremap <silent><C-e> :NERDTreeToggle<CR>
"nnoremap <M-n> gt
"nnoremap <M-p> gT
nnoremap <C-l> gt
nnoremap <C-h> gT

" last file point
augroup vimrcEx
au BufRead * if line("'\"") > 0 && line("'\"") <= line("$") |
\ exe "normal g`\"" | endif
augroup END

set ambiwidth=double
"set nowrap
set linebreak

autocmd BufNewFile,BufRead *.ts,*.vue  set filetype=javascript

" go lang
if expand("%:t") =~ ".*\.go"
    set noexpandtab
    set tabstop=4
    set shiftwidth=4
endif
" ts, vue
"if expand("%:t") =~ ".*\.[ts|vue|js]"
"    set tabstop=2
"    set shiftwidth=2
"endif

" php-cs-fixer (memo :NeoBundleUpdate)
let g:php_cs_fixer_path =
"/Users/akinori.yanagikawa/.composer/vendor/bin/php-cs-fixer" " define the
path to the php-cs-fixer.phar
let g:php_cs_fixer_config_file =
'/Users/akinori.yanagikawa/works/.php_cs.php'          " options:
--config-file
let g:php_cs_fixer_cache = '/Users/akinori.yanagikawa/works/.php_cs.cache'
         " options: --cache-file
"autocmd BufWritePost *.php silent! call PhpCsFixerFixFile()
autocmd QuitPre *.php silent! call PhpCsFixerFixFile()
